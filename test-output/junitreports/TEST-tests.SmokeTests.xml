<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="13" hostname="claudiupc" name="tests.SmokeTests" tests="14" failures="0" timestamp="13 May 2020 11:29:48 GMT" time="11.631" errors="1">
  <testcase name="setUp" time="11.631" classname="tests.SmokeTests">
    <error type="java.lang.Error" message="Unresolved compilation problem: 
	Syntax error on token &quot;void&quot;, volatile expected
">
      <![CDATA[java.lang.Error: Unresolved compilation problem: 
Syntax error on token "void", volatile expected

at pages.BasePage.<init>(BasePage.java:58)
at tests.BaseTest.setUp(BaseTest.java:85)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- setUp -->
  <testcase name="setCommission" time="0.000" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- setCommission -->
  <testcase name="add_new_coupon" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- add_new_coupon -->
  <testcase name="adjustAdd_inventory" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- adjustAdd_inventory -->
  <testcase name="medium_Management" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- medium_Management -->
  <testcase name="shipping_method" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- shipping_method -->
  <testcase name="orderHour" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- orderHour -->
  <testcase name="send_CSRInvitation" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- send_CSRInvitation -->
  <testcase name="send_CompounderInvitation" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- send_CompounderInvitation -->
  <testcase name="addNewPatient" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- addNewPatient -->
  <testcase name="invalidCredentials" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- invalidCredentials -->
  <testcase name="send_AdminInvitation" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- send_AdminInvitation -->
  <testcase name="adjustRemove_inventory" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- adjustRemove_inventory -->
  <testcase name="receive_inventory" classname="tests.SmokeTests">
    <skipped/>
  </testcase> <!-- receive_inventory -->
</testsuite> <!-- tests.SmokeTests -->
